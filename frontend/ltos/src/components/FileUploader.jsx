import React, { useState } from 'react';
import '../styles/UploadVideo.css';

const FileUploader = () => {
  const [files, setFiles] = useState([]);

  const addFile = () => {
    setFiles([...files, null]);
  };

  const removeFile = (index) => {
    const newFiles = [...files];
    newFiles.splice(index, 1);
    setFiles(newFiles);
  };

  const handleFileChange = (event, index) => {
    const newFiles = [...files];
    newFiles[index] = event.target.files[0];
    setFiles(newFiles);
  };

  const handleFileUpload = async () => {
    const formData = new FormData();
    files.forEach((file) => {
      if (file) {
        formData.append('files', file);
      }
    });

    try {
      const response = await fetch('/api/upload', {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        console.log('Files uploaded successfully');
        setFiles([]);
      } else {
        console.error('Error uploading files');
      }
    } catch (error) {
      console.error('Error uploading files:', error);
    }
  };

  return (
    <div className='file-input-container'>
      <div className='dash-container'>
      <svg xmlns="http://www.w3.org/2000/svg" width="63" height="63" viewBox="0 0 63 63" fill="none">
        <path d="M29.5 47.25C29.5 48.3546 30.3954 49.25 31.5 49.25C32.6046 49.25 33.5 48.3546 33.5 47.25H29.5ZM31.5 31.5L32.6094 29.8359C31.9376 29.388 31.0624 29.388 30.3906 29.8359L31.5 31.5ZM22.5156 35.0859C21.5965 35.6986 21.3482 36.9403 21.9609 37.8594C22.5736 38.7785 23.8153 39.0268 24.7344 38.4141L22.5156 35.0859ZM38.2656 38.4141C39.1847 39.0268 40.4264 38.7785 41.0391 37.8594C41.6518 36.9403 41.4035 35.6986 40.4844 35.0859L38.2656 38.4141ZM47.4153 18.5403L48.8296 17.1261L47.4153 18.5403ZM39.2109 10.3359L37.7967 11.7502V11.7502L39.2109 10.3359ZM13.6972 52.2582L11.9152 53.1662H11.9152L13.6972 52.2582ZM21.517 55.125V57.125V55.125ZM15.991 54.5533L16.8989 52.7713L16.8989 52.7713L15.991 54.5533ZM15.991 8.44722L16.8989 10.2292L16.8989 10.2292L15.991 8.44722ZM13.6972 10.741L11.9152 9.83299L11.9152 9.83299L13.6972 10.741ZM37.3191 8.64917L36.2741 10.3545V10.3545L37.3191 8.64917ZM35.802 8.02006L36.2689 6.07532L36.2689 6.07532L35.802 8.02006ZM49.7289 21.9485L47.7841 22.4154V22.4154L49.7289 21.9485ZM49.0995 20.4309L50.8047 19.3859V19.3859L49.0995 20.4309ZM49.3033 52.2582L51.0854 53.1662L49.3033 52.2582ZM41.4831 55.125V53.125V55.125ZM47.0069 54.5533L47.9149 56.3354L47.9149 56.3354L47.0069 54.5533ZM42.5169 23.625V21.625H42.5169L42.5169 23.625ZM36.991 23.0533L36.083 24.8354H36.083L36.991 23.0533ZM34.6972 20.7574L36.4792 19.8494V19.8494L34.6972 20.7574ZM49.8755 25.625C50.9801 25.625 51.8755 24.7296 51.8755 23.625C51.8755 22.5204 50.9801 21.625 49.8755 21.625V25.625ZM33.5 47.25V31.5H29.5V47.25H33.5ZM24.7344 38.4141L32.6094 33.1641L30.3906 29.8359L22.5156 35.0859L24.7344 38.4141ZM30.3906 33.1641L38.2656 38.4141L40.4844 35.0859L32.6094 29.8359L30.3906 33.1641ZM48.8296 17.1261L40.6252 8.92172L37.7967 11.7502L46.0011 19.9545L48.8296 17.1261ZM33.2711 5.875H21.5255V9.875H33.2711V5.875ZM11.125 16.2755V46.7255H15.125V16.2755H11.125ZM11.125 46.7255C11.125 48.1626 11.1234 49.3606 11.2032 50.3362C11.2848 51.3353 11.4615 52.2758 11.9152 53.1662L15.4792 51.3502C15.3607 51.1176 15.2513 50.7619 15.1899 50.0104C15.1266 49.2355 15.125 48.2287 15.125 46.7255H11.125ZM21.517 53.125C20.0167 53.125 19.0112 53.1235 18.2371 53.0602C17.4863 52.9988 17.1309 52.8895 16.8989 52.7713L15.083 56.3354C15.9729 56.7888 16.9133 56.9653 17.9113 57.0469C18.8861 57.1266 20.0827 57.125 21.517 57.125V53.125ZM11.9152 53.1662C12.6097 54.5292 13.7177 55.6397 15.083 56.3354L16.8989 52.7713C16.2885 52.4603 15.7914 51.9629 15.4792 51.3502L11.9152 53.1662ZM21.5255 5.875C20.0884 5.875 18.89 5.87345 17.914 5.95317C16.9147 6.03478 15.9736 6.21143 15.083 6.6652L16.8989 10.2292C17.1314 10.1108 17.4874 10.0013 18.2396 9.93989C19.015 9.87655 20.0224 9.875 21.5255 9.875V5.875ZM15.125 16.2755C15.125 14.7724 15.1266 13.765 15.1899 12.9896C15.2513 12.2374 15.3608 11.8814 15.4792 11.6489L11.9152 9.83299C11.4614 10.7236 11.2848 11.6647 11.2032 12.664C11.1234 13.64 11.125 14.8384 11.125 16.2755H15.125ZM15.083 6.6652C13.7188 7.36028 12.6103 8.46881 11.9152 9.83299L15.4792 11.6489C15.7908 11.0374 16.2874 10.5408 16.8989 10.2292L15.083 6.6652ZM40.6252 8.92172C39.7852 8.08172 39.1425 7.42092 38.3641 6.94389L36.2741 10.3545C36.5549 10.5265 36.8219 10.7753 37.7967 11.7502L40.6252 8.92172ZM33.2711 9.875C33.5955 9.875 33.8671 9.87502 34.1068 9.8772L34.1432 5.87736C33.8816 5.87498 33.5903 5.875 33.2711 5.875V9.875ZM34.1068 9.8772C34.8444 9.88391 35.121 9.91341 35.3351 9.9648L36.2689 6.07532C35.5773 5.90928 34.9052 5.8843 34.1432 5.87736L34.1068 9.8772ZM38.3641 6.94389C37.7168 6.54721 37.0101 6.25329 36.2689 6.07532L35.3351 9.9648C35.6652 10.044 35.982 10.1754 36.2741 10.3545L38.3641 6.94389ZM51.875 24.4799C51.875 24.16 51.875 23.8682 51.8725 23.6059L47.8726 23.6441C47.8749 23.8837 47.875 24.1555 47.875 24.4799H51.875ZM51.8725 23.606C51.8652 22.8429 51.8393 22.1719 51.6736 21.4816L47.7841 22.4154C47.8358 22.6304 47.8656 22.9083 47.8726 23.644L51.8725 23.606ZM46.0011 19.9545C46.9744 20.9279 47.2216 21.1943 47.3942 21.4759L50.8047 19.3859C50.328 18.6079 49.6722 17.9688 48.8296 17.1261L46.0011 19.9545ZM51.6736 21.4816C51.4956 20.74 51.2013 20.033 50.8047 19.3859L47.3942 21.4759C47.5733 21.7683 47.705 22.0856 47.7841 22.4154L51.6736 21.4816ZM47.875 46.7344C47.875 48.2347 47.8734 49.2395 47.8102 50.013C47.7489 50.763 47.6397 51.118 47.5213 51.3502L51.0854 53.1662C51.5387 52.2765 51.7153 51.3368 51.7969 50.339C51.8766 49.3647 51.875 48.1686 51.875 46.7344H47.875ZM41.4831 57.125C42.9174 57.125 44.1134 57.1266 45.0877 57.0469C46.0855 56.9653 47.0252 56.7887 47.9149 56.3354L46.0989 52.7713C45.8667 52.8897 45.5117 52.9989 44.7617 53.0602C43.9883 53.1234 42.9834 53.125 41.4831 53.125V57.125ZM47.5213 51.3502C47.2103 51.9607 46.7115 52.4592 46.0989 52.7713L47.9149 56.3354C49.278 55.6408 50.3898 54.5314 51.0854 53.1662L47.5213 51.3502ZM36.125 15.225V7.87728H32.125V15.225H36.125ZM42.5169 21.625C41.0167 21.625 40.0112 21.6234 39.2371 21.5602C38.4863 21.4988 38.1309 21.3895 37.899 21.2713L36.083 24.8354C36.9729 25.2888 37.9133 25.4653 38.9113 25.5469C39.8861 25.6266 41.0826 25.625 42.5169 25.625L42.5169 21.625ZM32.125 15.225C32.125 16.6621 32.1234 17.86 32.2032 18.8356C32.2848 19.8346 32.4616 20.7751 32.9152 21.6654L36.4792 19.8494C36.3607 19.6168 36.2513 19.2611 36.1899 18.5098C36.1266 17.7349 36.125 16.7282 36.125 15.225H32.125ZM37.899 21.2713C37.2892 20.9606 36.7917 20.4627 36.4792 19.8494L32.9152 21.6654C33.6094 23.0278 34.7171 24.1394 36.083 24.8354L37.899 21.2713ZM51.875 46.7344V24.4799H47.875V46.7344H51.875ZM21.517 57.125L41.4831 57.125V53.125L21.517 53.125L21.517 57.125ZM49.8755 21.625H49.8725V25.625H49.8755V21.625ZM49.8725 21.625H42.5169V25.625H49.8725V21.625Z" fill="#548AF7"/>
      </svg>
        {files.map((_, index) => (
          <div key={index} className="file-input">
            <input type="file" onChange={(event) => handleFileChange(event, index)} />
            <button onClick={() => removeFile(index)}>삭제</button>
          </div>
        ))}
        <button onClick={addFile}>파일 추가</button>
        <p>용량(  )</p>
      </div>
      <div className="upload-btn">
        <button>취소</button>
        <button onClick={handleFileUpload}>업로드</button>
      </div>
    </div>
  );
};

export default FileUploader;
